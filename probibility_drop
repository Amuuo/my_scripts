#!/bin/bash
#
# Script drops a percentage of packets intended for a specific
# desitination to simulate an inconsitent internet connection
#
# Usage: ./probability_drop.sh 
#		<-p --probibility (0..1)> 
#		<-d --destination_ip> 
#		[-s --source_ip]
#		[-D --duration duration of interrupt (sec)][0m
#
#	  Example: sudo ./prob* -p 1 -d us-west307.discord.gg -s 192.168.1.3 -D 3
#
#

PROBIBILITY=""
DESTINATION=""
SOURCE=""
DURATION=""
echo "" > log.txt
clear
tput cup 0 0 

trap '{ iptables --flush; iptables -X LOGGING; echo exiting... }' INT


print_usage() {  
  
  printf "\n\t[31mUsage: ./probability_drop.sh  "
  printf "\n\t\t<-d --destination_ip>"
  printf "\n\t\t[-s --source_ip]" 
  printf "\n\t\t[-p --probibility_of_drop (1-100)]"
  printf "\n\t\t[-D --duration duration of interrupt (sec)][0m\n\n"
  printf "\t[31mExample: sudo ./prob* -p 1 -d us-west307.discord.gg -s 192.168.1.3 -D 3[0m\n\n"
  exit 1  
}

print_drop_info(){
  
  local probibility=$1
  local source=$2
  local destination=$3
  
  printf "\n>> now dropping [32m"$probibility"%%[0m of packets "
  printf "from [33m"$source"[0m to [33m"$destination"[0m" 
}

printf "\nPROBABILITY_DROP\n\n"
iptables --flush
echo "" > /var/log/iptables.log

while (( "$#" )); do
  
  case "$1" in 
    -p|--probability)
      PROBIBILITY="$2"
      shift 2 ;;
    -d|--destination_ip)
      DESTINATION="$2"
      shift 2 ;;
    -s|--source_ip)
      SOURCE="$2"
      shift 2 ;;
    -D|--duration)
      DURATION="$2"
      shift 2 ;;
    -h|--help)
      print_usage
      exit 1 ;;
    -*)
      print_usage
      exit 1 ;;
  esac

done

iptables -N LOGGING
iptables -A LOGGING -m limit --limit 2/sec -j LOG --log-prefix "***IPTables-DROPPED PACKETS***: "
iptables -A LOGGING -j DROP

if [[ "$PROBIBILITY" == "" || "$DESTINATION" == "" ]]; then
  print_usage
  exit 1
fi

iptables -A OUTPUT -d "$DESTINATION" -m statistic \
  --mode random --probability "$(($PROBIBILITY/100))" -j LOG

print_drop_info $PROBIBILITY "gateway" $DESTINATION

if [[ "$SOURCE" != "" ]]; then
  iptables -A OUTPUT -d "$DESTINATION" -s "$SOURCE" \
  -m statistic --mode random --probability "$(($PROBIBILITY/100))" -j LOG
  
  print_drop_info $PROBIBILITY $SOURCE $DESTINATION
fi

printf "\n"



if [[ $DURATION != "" ]]; then
  
  
  for (( i=0;i<"$DURATION";i++ )); do
    tput sc
    printf "\n   Restoring in "$(($DURATION-$i))"..."
    sleep 1
    tput rc
    
  done
  printf "[0m\n"  
  tput rc 

  printf "[33m   Packet transmission restored to 100%[0m\n\n"
fi

while read line; do
  echo "$line"
done < "$`cat /var/log/iptables.log`"


printf "\n"



